apiVersion: apps/v1
kind: Deployment
metadata:
  name: collabora
spec:
  replicas: 1
  selector:
    matchLabels:
      app: collabora
  template:
    metadata:
      labels:
        app: collabora
    spec:
      securityContext:
        fsGroup: 0  # Ensure that the pod has access to the file system as root
      containers:
        - name: collabora
          image: collabora/code:latest
          ports:
            - containerPort: 9980
          env:
            - name: "domain"
              value: "pjdevops.com"  # Use your domain or localhost
            - name: "server_name"
              value: "pjdevops.com"  # Use your domain or localhost
            - name: "dictionaries"
              value: "de en es it"  # Adjust dictionaries as needed
            - name: "extra_params"
              value: "--o:ssl.enable=true --o:ssl.termination=true"
          volumeMounts:
            - name: collabora-storage
              mountPath: /var/lib/collabora  # Path where Collabora stores its data
          securityContext:
            capabilities:
              add:
                - MKNOD           # Needed for mounting devices in the container
                - SYS_ADMIN       # Allows broader system access to handle certain operations
            runAsUser: 0              # Ensure the container runs as root to bypass permission issues
            runAsGroup: 0             # Ensure the container runs with root group
      volumes:
        - name: collabora-storage
          hostPath:
            path: /mnt/data/collabora  # Host path for persistent storage
            type: DirectoryOrCreate  # Creates directory if not present

---
apiVersion: v1
kind: Service
metadata:
  name: collabora-service
spec:
  selector:
    app: collabora
  ports:
    - protocol: TCP
      port: 9980        # Internal port to expose
      targetPort: 9980  # Container's port
      nodePort: 30080   # NodePort to expose externally (adjust port as needed)
  type: NodePort        # Exposes service using NodePort

